{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Bold;}
{\colortbl;\red255\green255\blue255;\red108\green121\blue134;\red31\green31\blue36;\red255\green255\blue255;
\red252\green95\blue163;\red93\green216\blue255;\red208\green168\blue255;\red208\green168\blue255;\red65\green161\blue192;
\red158\green241\blue221;\red161\green103\blue230;\red103\green183\blue164;\red208\green191\blue105;\red103\green183\blue164;
\red161\green103\blue230;\red252\green106\blue93;\red146\green161\blue177;}
{\*\expandedcolortbl;;\csgenericrgb\c42394\c47462\c52518;\csgenericrgb\c12054\c12284\c14131;\csgenericrgb\c100000\c100000\c100000\c85000;
\csgenericrgb\c98839\c37355\c63833;\csgenericrgb\c36295\c84643\c99897;\csgenericrgb\c81569\c65882\c100000;\csgenericrgb\c81681\c65692\c99927;\csgenericrgb\c25490\c63137\c75294;
\csgenericrgb\c62145\c94386\c86819;\csgenericrgb\c63137\c40392\c90196;\csgenericrgb\c40392\c71765\c64314;\csgenericrgb\c81498\c74939\c41233;\csgenericrgb\c40538\c71705\c64209;
\csgenericrgb\c63232\c40219\c90115;\csgenericrgb\c98912\c41558\c36568;\csgenericrgb\c57255\c63137\c69412;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab593
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0

\f0\fs24 \cf2 \cb3 //\cf4 \
\cf2 //  WeatherTableViewController.swift\cf4 \
\cf2 //  Dark Sky Weather\cf4 \
\cf2 //\cf4 \
\cf2 //  Created by Roman Rosenast on 10/5/19.\cf4 \
\cf2 //  Copyright \'a9 2019 Roman Rosenast. All rights reserved.\cf4 \
\cf2 //\cf4 \
\

\f1\b \cf5 import
\f0\b0 \cf4  UIKit\

\f1\b \cf5 import
\f0\b0 \cf4  CoreLocation\
\

\f1\b \cf5 class
\f0\b0 \cf4  \cf6 WeatherTableViewController\cf4 : \cf7 UITableViewController\cf4 , \cf8 CLLocationManagerDelegate\cf4  \{\
    \
    
\f1\b \cf5 @IBOutlet
\f0\b0 \cf4  
\f1\b \cf5 weak
\f0\b0 \cf4  
\f1\b \cf5 var
\f0\b0 \cf4  \cf9 Header\cf4 : \cf7 UINavigationItem\cf4 !\
    \
    
\f1\b \cf5 var
\f0\b0 \cf4  \cf9 locationManager\cf4  = \cf7 CLLocationManager\cf4 ()\
    \
\cf2 //    Model interacts with VC through forecastData array.\cf4 \
    
\f1\b \cf5 var
\f0\b0 \cf4  \cf9 forecastData\cf4  = [\cf10 Weather\cf4 ]()\
    \
    
\f1\b \cf5 override
\f0\b0 \cf4  
\f1\b \cf5 func
\f0\b0 \cf4  \cf9 viewDidLoad\cf4 () \{\
        
\f1\b \cf5 super
\f0\b0 \cf4 .\cf11 viewDidLoad\cf4 ()\
        \
\cf2 //        Default to LA weather\cf4 \
        \cf12 updateWeatherForLocation\cf4 (location: \cf7 CLLocation\cf4 (latitude: \cf13 34.052235\cf4 , longitude: \cf13 -118.2437\cf4 ), defaultLoc: 
\f1\b \cf5 true
\f0\b0 \cf4 )\
    \}\
    \
\cf2 //    Updates forecastData array using static function from Weather class then refreshes tableview to show new information.\cf4 \
    
\f1\b \cf5 func
\f0\b0 \cf4  \cf9 updateWeatherForLocation\cf4  (location: \cf7 CLLocation\cf4 , defaultLoc: \cf8 Bool\cf4  = 
\f1\b \cf5 false
\f0\b0 \cf4 ) \{\
        \
        \cf14 Header\cf4 .\cf15 title\cf4  = defaultLoc ? \cf16 "Los Angeles"\cf4  : \cf16 "Current Location"\cf4 \
            \
        \cf10 Weather\cf4 .\cf12 forecast\cf4 (withLocation: location.\cf15 coordinate\cf4 , completion: \{ (results:[\cf10 Weather\cf4 ]?) 
\f1\b \cf5 in
\f0\b0 \cf4 \
            
\f1\b \cf5 if
\f0\b0 \cf4  
\f1\b \cf5 let
\f0\b0 \cf4  weatherData = results \{\
                
\f1\b \cf5 self
\f0\b0 \cf4 .\cf14 forecastData\cf4  = weatherData\
                \
                \cf7 DispatchQueue\cf4 .\cf15 main\cf4 .\cf11 async\cf4  \{\
                    
\f1\b \cf5 self
\f0\b0 \cf4 .\cf15 tableView\cf4 .\cf11 reloadData\cf4 ()\
                \}\
            \}\
        \})\
    \}\
    \
\cf2 //    Handle user requesting to see weather report for their current location.\cf4 \
    
\f1\b \cf5 @IBAction
\f0\b0 \cf4  
\f1\b \cf5 func
\f0\b0 \cf4  \cf9 getLocation\cf4 (
\f1\b \cf5 _
\f0\b0 \cf4  sender: 
\f1\b \cf5 Any
\f0\b0 \cf4 ) \{\
        \
        
\f1\b \cf5 self
\f0\b0 \cf4 .\cf14 locationManager\cf4 .\cf11 requestWhenInUseAuthorization\cf4 ()\
        
\f1\b \cf5 if
\f0\b0 \cf4  \cf7 CLLocationManager\cf4 .\cf11 locationServicesEnabled\cf4 () \{\
            \cf14 locationManager\cf4 .\cf15 delegate\cf4  = 
\f1\b \cf5 self
\f0\b0 \cf4 \
            \cf14 locationManager\cf4 .\cf15 desiredAccuracy\cf4  = \cf15 kCLLocationAccuracyKilometer\cf4 \
            \cf14 locationManager\cf4 .\cf11 startUpdatingLocation\cf4 ()\
        \}\
        \
    \}\
    \
\cf2 //    Update tableview with user's inputted location.\cf4 \
    
\f1\b \cf5 func
\f0\b0 \cf4  \cf9 locationManager\cf4 (
\f1\b \cf5 _
\f0\b0 \cf4  manager: \cf7 CLLocationManager\cf4 , didUpdateLocations locations: [\cf7 CLLocation\cf4 ]) \{\
        
\f1\b \cf5 let
\f0\b0 \cf4  userLocation = locations.\cf15 last\cf4 \
        \cf12 updateWeatherForLocation\cf4 (location: userLocation! )\
    \}\
\
    \cf2 // MARK:
\f1\b \cf17  - Table view data source
\f0\b0 \cf4 \
\
    
\f1\b \cf5 override
\f0\b0 \cf4  
\f1\b \cf5 func
\f0\b0 \cf4  \cf9 numberOfSections\cf4 (in tableView: \cf7 UITableView\cf4 ) -> \cf8 Int\cf4  \{\
        
\f1\b \cf5 return
\f0\b0 \cf4  \cf13 1\cf4 \
    \}\
\
    
\f1\b \cf5 override
\f0\b0 \cf4  
\f1\b \cf5 func
\f0\b0 \cf4  \cf9 tableView\cf4 (
\f1\b \cf5 _
\f0\b0 \cf4  tableView: \cf7 UITableView\cf4 , numberOfRowsInSection section: \cf8 Int\cf4 ) -> \cf8 Int\cf4  \{\
        
\f1\b \cf5 return
\f0\b0 \cf4  \cf14 forecastData\cf4 .\cf15 count\cf4 \
    \}\
    \
    
\f1\b \cf5 override
\f0\b0 \cf4  
\f1\b \cf5 func
\f0\b0 \cf4  \cf9 tableView\cf4 (
\f1\b \cf5 _
\f0\b0 \cf4  tableView: \cf7 UITableView\cf4 , cellForRowAt indexPath: \cf8 IndexPath\cf4 ) -> \cf7 UITableViewCell\cf4  \{\
        
\f1\b \cf5 let
\f0\b0 \cf4  cell = tableView.\cf11 dequeueReusableCell\cf4 (withIdentifier: \cf16 "Cell"\cf4 , for: indexPath)\
\
        
\f1\b \cf5 let
\f0\b0 \cf4  weatherObject = \cf14 forecastData\cf4 [indexPath.\cf15 row\cf4 ]\
\
        cell.\cf15 textLabel\cf4 ?.\cf15 text\cf4  = \cf16 "\cf4 \\(weatherObject.\cf14 day\cf4 )\cf16 : \cf4 \\(\cf8 Int\cf4 (weatherObject.\cf14 low\cf4 ))\cf16 \'b0 - \cf4 \\(\cf8 Int\cf4 (weatherObject.\cf14 high\cf4 ))\cf16 \'b0"\cf4 \
        cell.\cf15 imageView\cf4 ?.\cf15 image\cf4  = \cf7 UIImage\cf4 (named: weatherObject.\cf14 icon\cf4 )\
\
        
\f1\b \cf5 return
\f0\b0 \cf4  cell\
    \}\
    \
\cf2 //    Dynamically size tableview cells to fill screen.\cf4 \
    
\f1\b \cf5 override
\f0\b0 \cf4  
\f1\b \cf5 func
\f0\b0 \cf4  \cf9 tableView\cf4 (
\f1\b \cf5 _
\f0\b0 \cf4  tableView: \cf7 UITableView\cf4 , heightForRowAt indexPath: \cf8 IndexPath\cf4 ) -> \cf8 CGFloat\cf4  \{\
        
\f1\b \cf5 let
\f0\b0 \cf4  MinHeight: \cf8 CGFloat\cf4  = \cf13 80.0\cf4 \
        
\f1\b \cf5 let
\f0\b0 \cf4  tHeight = tableView.\cf15 bounds\cf4 .\cf15 height\cf4 \
        \
        
\f1\b \cf5 let
\f0\b0 \cf4  dynamicHeight = tHeight \cf11 /\cf4  \cf8 CGFloat\cf4 (\cf14 forecastData\cf4 .\cf15 count\cf11 +\cf13 1\cf4 )\
        
\f1\b \cf5 return
\f0\b0 \cf4  dynamicHeight > MinHeight ? dynamicHeight : MinHeight\
    \}\
    \
\cf2 //    Programatically display new page with selected day's summary.\cf4 \
    
\f1\b \cf5 override
\f0\b0 \cf4  
\f1\b \cf5 func
\f0\b0 \cf4  \cf9 tableView\cf4 (
\f1\b \cf5 _
\f0\b0 \cf4  tableView: \cf7 UITableView\cf4 , didSelectRowAt indexPath: \cf8 IndexPath\cf4 ) \{\
        
\f1\b \cf5 let
\f0\b0 \cf4  weatherObject = \cf14 forecastData\cf4 [indexPath.\cf15 row\cf4 ]\
        \
        
\f1\b \cf5 let
\f0\b0 \cf4  summaryVC = \cf7 UIViewController\cf4 ()\
        
\f1\b \cf5 let
\f0\b0 \cf4  summaryLabel = \cf7 UILabel\cf4 (frame: \cf8 CGRect\cf4 (x: \cf13 0\cf4 , y: \cf13 0\cf4 , width: summaryVC.\cf15 view\cf4 .\cf15 bounds\cf4 .\cf15 width\cf4 , height: summaryVC.\cf15 view\cf4 .\cf15 bounds\cf4 .\cf15 height\cf4 ))\
        summaryLabel.\cf15 center\cf4  = \cf8 CGPoint\cf4 (x: summaryVC.\cf15 view\cf4 .\cf15 bounds\cf4 .\cf15 width\cf11 /\cf13 2\cf4 , y: summaryVC.\cf15 view\cf4 .\cf15 bounds\cf4 .\cf15 height\cf11 /\cf13 4\cf4 )\
        summaryLabel.\cf15 textAlignment\cf4  = .\cf15 center\cf4 \
        summaryLabel.\cf15 textColor\cf4  = .\cf15 white\cf4 \
        summaryLabel.\cf15 text\cf4  = weatherObject.\cf14 summary\cf4 \
        \
        summaryVC.\cf15 view\cf4 .\cf11 addSubview\cf4 (summaryLabel)\
        \
        \cf15 navigationController\cf4 ?.\cf11 pushViewController\cf4 (summaryVC, animated: 
\f1\b \cf5 false
\f0\b0 \cf4 )\
    \}\
\}\
}